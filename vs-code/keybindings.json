// see: https://code.visualstudio.com/api/references/when-clause-contexts

// prettier-ignore-start

[
  ////////////////
  // NAVIGATING //
  ////////////////

  // UI navigation
  { "key": "ctrl+h", "command": "workbench.action.navigateLeft" },
  { "key": "ctrl+l", "command": "workbench.action.navigateRight" },
  { "key": "ctrl+j", "command": "workbench.action.navigateDown" },
  { "key": "ctrl+k", "command": "workbench.action.navigateUp" },

  // Project navigation
  { "key": "ctrl+i", "command": "workbench.action.navigateForward" },
  { "key": "ctrl+o", "command": "workbench.action.navigateBack" },

  // Editor navigation
  { "key": "ctrl+]", "command": "workbench.action.nextEditor", "when": "editorFocus || inKeybindings || inSettingsEditor || terminalEditorFocus" },
  { "key": "ctrl+[", "command": "workbench.action.previousEditor", "when": "editorFocus || inKeybindings || inSettingsEditor || terminalEditorFocus" },

  // Terminal navigation
  { "key": "ctrl+t", "command": "workbench.action.terminal.toggleTerminal", "when": "terminal.active" },
  { "key": "ctrl+\\", "command": "workbench.action.terminal.split", "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile" },
  { "key": "ctrl+h", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+l", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+]", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus" },
  { "key": "ctrl+[", "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus" },
  { "key": "cmd+ctrl+h", "command": "workbench.action.terminal.resizePaneLeft", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "cmd+ctrl+l", "command": "workbench.action.terminal.resizePaneRight", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "cmd+ctrl+j", "command": "workbench.action.terminal.resizePaneDown", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "cmd+ctrl+k", "command": "workbench.action.terminal.resizePaneUp", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },

  // Panel navigation
  { "key": "cmd+ctrl+]", "command": "workbench.action.nextPanelView", "when": "panelFocus" },
  { "key": "cmd+ctrl+[", "command": "workbench.action.previousPanelView", "when": "panelFocus" },
  { "key": "cmd+j", "command": "-console.log.wrap.json", "when": "editorTextFocus" },

  // List navigation
  { "key": "j", "command": "list.focusDown", "when": "listFocus && !inputFocus" },
  { "key": "k", "command": "list.focusUp", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+j", "command": "list.focusDown", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+k", "command": "list.focusUp", "when": "listFocus && !inputFocus" },
  { "key": "l", "command": "list.select", "when": "listFocus && !inputFocus" },
  { "key": "h", "command": "list.collapse", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+j", "command": "cursorDown", "when": "textInputFocus" },
  { "key": "ctrl+k", "command": "cursorUp", "when": "textInputFocus" },
  { "key": "j", "command": "workbench.action.quickOpenSelectNext", "when": "inQuickOpen && !inputFocus && !whichkeyVisible" },
  { "key": "k", "command": "workbench.action.quickOpenSelectPrevious", "when": "inQuickOpen && !inputFocus && !whichkeyVisible" },
  { "key": "ctrl+j", "command": "workbench.action.quickOpenSelectNext", "when": "inQuickOpen" },
  { "key": "ctrl+k", "command": "workbench.action.quickOpenSelectPrevious", "when": "inQuickOpen" },
  { "key": "ctrl+j", "command": "selectNextSuggestion", "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion" },
  { "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion" },
  { "key": "ctrl+j", "command": "selectNextCodeAction", "when": "codeActionMenuVisible" },
  { "key": "ctrl+k", "command": "selectPrevCodeAction", "when": "codeActionMenuVisible" },
  { "key": "ctrl+j", "command": "showNextParameterHint", "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
  { "key": "ctrl+k", "command": "showPrevParameterHint", "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },

  // Diff navigation
  { "key": "] c", "command": "workbench.action.compareEditor.nextChange", "when": "editorTextFocus && textCompareEditorActive" },
  { "key": "[ c", "command": "workbench.action.compareEditor.previousChange", "when": "editorTextFocus && textCompareEditorActive" },

  /////////////
  // EDITING //
  /////////////

  { "key": "shift+.", "command": "editor.action.indentLines", "when": "editorTextFocus && !editorReadonly && vim.mode != 'Insert'" },
  { "key": "shift+,", "command": "editor.action.outdentLines", "when": "editorTextFocus && !editorReadonly && vim.mode != 'Insert'" },
  { "key": "ctrl+r", "command": "redo", "when": "editorTextFocus && vim.active && !inDebugRepl" },
  { "key": "cmd+n", "command": "extension.advancedNewFile" },

  /////////////
  // FINDING //
  /////////////

  { "key": "ctrl+k", "command": "search.action.focusSearchFromResults", "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible" },
  { "key": "ctrl+j", "command": "search.focus.nextInputBox", "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible" },
  { "key": "ctrl+k", "command": "search.focus.previousInputBox", "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus" },

  ///////////////
  // WHICH-KEY //
  ///////////////

  { "key": "ctrl+,", "command": "whichkey.show" },
  { "key": "ctrl+u", "command": "whichkey.undoKey", "when": "whichkeyVisible" }
]

// prettier-ignore-end