#############
# BEHAVIOUR #
#############

confirm_os_window_close 0
scrollback_lines 10000

##############
# APPEARANCE #
##############

adjust_line_height 135%
cursor_text_color background
enabled_layouts horizontal,stack
font_family UbuntuMono Nerd Font
font_size 15
hide_window_decorations yes
macos_show_window_title_in window
window_padding_width 8

include colorscheme/catppuccin-mocha.conf
# include colorscheme/material-ocean.conf

###################
# KEYMAPS (KITTY) #
###################

# see: https://sw.kovidgoyal.net/kitty/actions

# Create windows
map cmd+shift+\ new_window_with_cwd

# Navigate windows (i.e. splits/panes)
map cmd+shift+h neighboring_window left
map cmd+shift+l neighboring_window right
map cmd+shift+j neighboring_window bottom
map cmd+shift+k neighboring_window top

# Navigate tabs
map cmd+shift+[ previous_tab
map cmd+shift+] next_tab

# toggle zoom current window
map cmd+shift+m toggle_layout stack

# use nvim as scrollback pager
# see: https://www.reddit.com/r/neovim/comments/qqf4nn/psa_you_can_use_neovim_as_the_kitty_terminal/
scrollback_pager nvim -u ~/.config/nvim-kitty-scrollback/init.lua -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
# scrollback_pager NVIM_APPNAME=nvim-kitty-scrollback nvim -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "

# search scrollback in a pager (mapped to nvim above)
# see: https://sw.kovidgoyal.net/kitty/actions/#action-show_scrollback
map cmd+f show_scrollback
map cmd+o show_last_command_output

# Fuzzy search terminal output (including scrollback and current process output)
# see: https://github.com/kovidgoyal/kitty/issues/718#issuecomment-1188523518
# see: https://sw.kovidgoyal.net/kitty/kittens/clipboard/
# map cmd+f launch --type=overlay --stdin-source=@screen_scrollback /bin/sh -c "/opt/homebrew/bin/fzf --no-sort --no-mouse --exact --tac | kitty +kitten clipboard"

# Hinting for text onscreen
# See: https://sw.kovidgoyal.net/kitty/conf/#select-and-act-on-visible-text
# See: https://sw.kovidgoyal.net/kitty/kittens/hints/#options
map cmd+shift+u open_url_with_hints
map cmd+shift+p kitten hints --type path --program @
map cmd+shift+n kitten hints --type line --program @
map cmd+shift+w kitten hints --type word --program @
# map cmd+shift+h kitten hints --type hash --program @

##################
# KEYMAPS (TMUX) #
##################

# see: https://www.joshmedeski.com/posts/macos-keyboard-shortcuts-for-tmux/
# see: https://github.com/kovidgoyal/kitty/discussions/6538
# see: https://sw.kovidgoyal.net/kitty/conf/#shortcut-kitty.Send-arbitrary-text-on-key-presses

# NOTE: outside of tmux, use `kitten show_key` + tmux shortcut to get escape codes for tmux shortcut I want to trigger

# commands
map cmd+, send_text all \x01,

# SESSIONS

# select session or window (C-a + s/w)
map cmd+s send_text all \x01s
map cmd+w send_text all \x01w

# next/prev session
map cmd+] send_text all \x01)
map cmd+[ send_text all \x01(

# detach from session (C-a + d)
map cmd+d send_text all \x01d

# WINDOWS #

# create/close window: C-a + c/x)
map cmd+t send_text all \x01c
map cmd+x send_text all \x01x

# next/prev window (C-a + n/p)
map cmd+n send_text all \x01n
map cmd+p send_text all \x01p

# maximize window (C-a + z)
map cmd+m send_text all \x01z

# cmd+number = (switch to window: C-a + number)
map cmd+1 send_text all \x011
map cmd+2 send_text all \x012
map cmd+3 send_text all \x013
map cmd+4 send_text all \x014
map cmd+5 send_text all \x015
map cmd+6 send_text all \x016
map cmd+7 send_text all \x017
map cmd+8 send_text all \x018
map cmd+9 send_text all \x019

# rename window (C-a + r)
map cmd+m send_text all \x01r

# PANES #

# split pane (C-a + \/-)
map cmd+\ send_text all \x01\\
map cmd+- send_text all \x01-

# TODO: COPY MODE
